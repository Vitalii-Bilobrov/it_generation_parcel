{"mappings":"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","sources":["src/js/contacts/contacts.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'material-icons/iconfont/material-icons.css';\nconst BASE_URL = 'https://637b70ec10a6f23f7fa8d15c.mockapi.io/';\nconst refs = {\n  list: document.querySelector('.contacts__list'),\n  btnEl: document.querySelector('.btn-all'),\n  btnAddContact: document.querySelector('.btn-addContact'),\n  backDropEl: document.querySelector('.backdrop'),\n  formEl: document.querySelector('.contact-form'),\n  btnClose: document.querySelector('.contact-form-close')\n};\n\nconst onBtnClose = () => {\n  refs.backDropEl.classList.toggle('is-closed');\n}\n\nrefs.btnClose.addEventListener('click', onBtnClose);\n\n// ======================================================\n\nconst LOCAL_STORAGE_KEY = 'contact_key';\n\nfunction initForm() {\n  let memory = localStorage.getItem(LOCAL_STORAGE_KEY);\n\n  if (memory) {\n    memory = JSON.parse(memory);\n    Object.entries(memory).forEach(([name, value]) => {\n      refs.formEl.elements[name].value = value;\n    });\n  }\n}\n\ninitForm();\n\nfunction handleInput(event) {\n  let savedData = localStorage.getItem(LOCAL_STORAGE_KEY);\n  savedData = savedData ? JSON.parse(savedData) : {};\n\n  savedData[event.target.name] = event.target.value;\n\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(savedData));\n}\nfunction onSubmitForm(e) {\n  e.preventDefault();\n  const formData = new FormData(refs.formEl);\n  const userData = {};\n  formData.forEach((value, name) => {\n    userData[name] = value;\n  });\n  console.log(userData);\n\n  addContact(userData).then(initPage);\n\n  e.target.reset();\n  localStorage.removeItem(LOCAL_STORAGE_KEY);\n}\n\nrefs.formEl.addEventListener('input', handleInput);\nrefs.formEl.addEventListener('submit', onSubmitForm);\n\n\n// ======================================================\n\nconst onBtnOpenClick = () => {\n  refs.backDropEl.classList.toggle('is-closed');\n};\n\nrefs.btnAddContact.addEventListener('click', onBtnOpenClick);\n\nrefs.btnEl.style.display = 'none';\nrefs.btnEl.addEventListener('click',initPage);\n\nrefs.list.addEventListener('click', handleClick);\n\nfunction handleClick(e) {\n  if (e.target.nodeName === 'UL' || e.target.nodeName === 'A') {\n    return;\n  }\n  const item = e.target.closest('.js-contact-card');\n  const id = item.dataset.id;\n\n  if (e.target.nodeName == 'BUTTON') {\n    deleteContact(id);\n    item.remove();\n    return;\n  }\n\n  getContactById(id).then(contact => {\n    const markUp = createMarkup(contact);\n    refs.list.innerHTML = markUp;\n    refs.btnEl.style.display = 'block';\n  });\n}\n\nfunction getContactById(id) {\n    return fetch(`${BASE_URL}contacts/${id}`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return response.json();\n  });\n}\n\nfunction getContscts() {\n  return fetch(`${BASE_URL}contacts`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return response.json();\n  });\n}\n\nfunction deleteContact(id) {\n  return fetch(`${BASE_URL}contacts/${id}`, {\n    method: 'DELETE',\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return response.json();\n    })\n    .then(contact => {\n      Notiflix.Notify.info(`${contact.name} was deleted!`);\n    });\n}\n\nfunction addContact(data) {\n  return fetch(`${BASE_URL}contacts/`, {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return response.json();\n    });\n}\ninitPage();\n\nfunction initPage() {\n  getContscts().then(data => {\n  const contactItems = data.map(createMarkup).join('');\n\n    refs.list.innerHTML = contactItems;\n    refs.btnEl.style.display = 'none';\n});\n}\n\nfunction createMarkup({ id, name, createdAt, avatar, phone, email }) {\n  return `<li data-id=\"${id}\" class=\"col-md-6 js-contact-card\">\n      <div class=\"card mb-2 shadow\">\n        <div class=\"d-flex justify-content-between pb-3 border-bottom\">\n          <div class=\"d-flex flex-row align-items-center gap-1\">\n            <div class=\"icon\">\n               <span class=\"material-icons-outlined\"> contacts </span>\n            </div>\n            <div class=\"ms-2 c-details\">\n              <h2 class=\"h5 mb-0 fw-bold\">${id} - ${name}</h2>\n              <span>${createdAt}</span>\n            </div>\n          </div>\n          <img  src=\"${avatar}\" alt=\"${name}\" width=\"70\" height=\"70\"/>\n          <button type=\"button\" class=\"btn-close\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"mt-2\">\n          <ul class=\"list-group list-group-flush\">\n            <li class=\"list-group-item d\">\n              <a\n                href=\"tel:+${phone}\"\n                class=\"d-flex align-items-center text-secondary text-decoration-none nav-link\"\n                ><span class=\"material-icons-round me-2\"> phone </span> ${phone}</a\n              >\n            </li>\n            <li class=\"list-group-item\">\n              <a\n                href=\"mailto:${email}\"\n                class=\"d-flex align-items-center text-secondary text-decoration-none nav-link\"\n                ><span class=\"material-icons-round me-2\">\n                  alternate_email\n                </span>\n                ${email}</a\n              >\n            </li>\n          </ul>\n        </div>\n      </div>\n    </li>`;\n}\n\n\n"],"names":["$eWCmQ","parcelRequire","$ec26aa9b20ad1325$var$BASE_URL","$ec26aa9b20ad1325$var$refs","list","document","querySelector","btnEl","btnAddContact","backDropEl","formEl","btnClose","addEventListener","classList","toggle","memory","localStorage","getItem","JSON","parse","Object","entries","forEach","name","value","elements","$ec26aa9b20ad1325$var$initForm","event","savedData","target","setItem","stringify","e","preventDefault","formData","FormData","userData","data","console","log","fetch","method","body","headers","then","response","ok","Error","statusText","json","$ec26aa9b20ad1325$var$initPage","reset","removeItem","contactItems","map","$ec26aa9b20ad1325$var$createMarkup","join","innerHTML","style","display","id","createdAt","avatar","phone","email","nodeName","item","closest","dataset","contact","$parcel$interopDefault","Notify","info","$ec26aa9b20ad1325$var$deleteContact","remove","$ec26aa9b20ad1325$var$getContactById","markUp"],"version":3,"file":"contacts.f783daa7.js.map"}