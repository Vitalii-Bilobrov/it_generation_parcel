{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SCAAC,EAAAD,EAAA,S,0BACEE,EAAQ,IAAAC,QACRC,EAAK,IAAAD,QACLE,EAAS,IAAAF,QACTG,EAAM,IAAAH,QACNI,EAAa,IAAAJ,QCLR,SAASK,EAAaC,GAC3B,OAAOA,EACJC,KACC,EAACC,KAAEA,EAAIC,gBAAEA,KAA+B,6CAC9BD,EAAKE,eAAeD,mCAG/BE,KAAK,G,CCPH,MAAMC,EAAO,CAClBC,UAAWC,SAASC,cAAc,YAClCC,OAAQF,SAASC,cAAc,oBHG3BE,EAAc,ICLb,MAOLC,YACE,OAAOC,MACL,oDAAkDC,EAAAtB,EAAA,CAAEuB,KAAMtB,WAAcqB,EAAAtB,EAAA,CACtEuB,KAAMpB,YACAmB,EAAAtB,EAAA,CAAEuB,KAAMlB,eAAgBiB,EAAAtB,EAAA,CAAEuB,KAAMnB,MACxCoB,MAAKC,IACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MAAM,G,CAItBC,YACF,OAAAR,EAAAtB,EAAA,CAAOuB,KAAMlB,E,CAGXyB,UAAMC,G,UACF1B,EAAQ0B,E,CAGhBC,SAASC,G,UACD3B,EAAe2B,E,CAGvBC,kBACE,OAAOZ,EAAAtB,EAAA,CAAAuB,KAAMpB,GAAOgC,KAAKC,KAAKd,EAAAtB,EAAA,CAAAuB,KAAMjB,GAAYgB,EAAAtB,EAAA,CAAGuB,KAAMnB,G,CAE3DiC,gB,UACQlC,EAAImB,EAAAtB,EAAA,CAAVuB,KAAMpB,GAAQ,E,CAEhBmC,Y,UACQnC,EAAO,E,eAtCfmB,EAAAiB,EAAA,CAAAhB,KAAAtB,EAAQ,C,kBAAG,gDACXqB,EAAAiB,EAAA,CAAAhB,KAAApB,EAAK,C,kBAAG,IACRmB,EAAAiB,EAAA,CAAAhB,KAAAnB,EAAS,C,kBAAG,KACZkB,EAAAiB,EAAA,CAAAhB,KAAAlB,EAAM,C,kBAAG,KACTiB,EAAAiB,EAAA,CAAAhB,KAAAjB,EAAa,C,kBAAG,G,GDgCZkC,EAAK,IAAIC,sBAzBQ,SAAUC,EAASC,GACxCD,EAAQE,SAAQC,IACVA,EAAMC,iBACRH,EAASI,UAAUF,EAAMG,QACzB7B,EAAYkB,gBACZlB,EAAYC,YAAYI,MAAKyB,IAC3B,GAA4B,IAAxBA,EAAKC,QAAQC,OAEf,YADA7B,EAAAxB,GAASsD,OAAOC,QAAQ,iBAI1BvC,EAAKC,UAAUuC,mBACb,YACA/C,EAAa0C,EAAKC,UAGpB,GADuB/B,EAAYe,kBACf,CAClB,MAAMqB,EAAOvC,SAASC,cAAc,6BACpC0B,EAASa,QAAQD,E,WAvBX,CACdE,KAAM,KACNC,WAAY,QACZC,UAAW,IA2Db7C,EAAKI,OAAO0C,iBAAiB,UA9B7B,SAAuBC,GACrBA,EAAMC,iBACN,MACEC,UAAUjC,MAAEA,IACV+B,EAAMb,OACJgB,EAAclC,EAAMmC,MAAMC,cAAcC,OAC9C,IAAKH,EACH,OAAO1C,EAAAxB,GAASsD,OAAOC,QAAQ,cAEjClC,EAAYmB,YACZxB,EAAKC,UAAUqD,UAAY,GAE3BjD,EAAYW,MAAQkC,EACpB7C,EAAYC,YAAYI,MAAKyB,IAC3B,GAA4B,IAAxBA,EAAKC,QAAQC,OAEf,YADA7B,EAAAxB,GAASsD,OAAOC,QAAQ,iBAG1BlC,EAAYa,SAASiB,EAAKhB,OAE1BnB,EAAKC,UAAUqD,UAAY7D,EAAa0C,EAAKC,SAE7C,GADuB/B,EAAYe,kBACf,CAClB,MAAMqB,EAAOvC,SAASC,cAAc,6BACpCuB,EAAGgB,QAAQD,E,KAGfM,EAAMb,OAAOqB,O","sources":["src/js/photos/photos.js","src/js/photos/UnsplashApi.js","src/js/photos/createMarkup.js","src/js/photos/refs.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { UnsplashApi } from './UnsplashApi';\nimport { createMarkup } from './createMarkup';\nimport { refs } from './refs';\n\nconst unsplashApi = new UnsplashApi();\n\nconst options = {\n  root: null,\n  rootMargin: '100px',\n  threshold: 1.0,\n};\nconst loadMorePhotos = function (entries, observer) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      observer.unobserve(entry.target);\n      unsplashApi.incrementPage();\n      unsplashApi.getPhotos().then(data => {\n        if (data.results.length === 0) {\n          Notiflix.Notify.failure('Nothing found');\n          return;\n        }\n\n        refs.galleryEL.insertAdjacentHTML(\n          'beforeend',\n          createMarkup(data.results)\n        );\n        const haveMorePhotos = unsplashApi.morePagesExists();\n        if (haveMorePhotos) {\n          const item = document.querySelector('.gallery__item:last-child');\n          observer.observe(item);\n        }\n      });\n    }\n  });\n};\n\nconst io = new IntersectionObserver(loadMorePhotos, options);\n\nfunction onInputSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { query },\n  } = event.target;\n  const searchValue = query.value.toLowerCase().trim();\n  if (!searchValue) {\n    return Notiflix.Notify.failure('Input word');\n  }\n  unsplashApi.resetPage();\n  refs.galleryEL.innerHTML = '';\n\n  unsplashApi.query = searchValue;\n  unsplashApi.getPhotos().then(data => {\n    if (data.results.length === 0) {\n      Notiflix.Notify.failure('Nothing found');\n      return;\n    }\n    unsplashApi.setTotal(data.total);\n\n    refs.galleryEL.innerHTML = createMarkup(data.results);\n    const haveMorePhotos = unsplashApi.morePagesExists();\n    if (haveMorePhotos) {\n      const item = document.querySelector('.gallery__item:last-child');\n      io.observe(item);\n    }\n  });\n  event.target.reset();\n}\n\nrefs.formEl.addEventListener('submit', onInputSubmit);\n","export class UnsplashApi {\n  #API_KEY = 'gEopSExvxGRBacvbCX5khX4G6aHTWmEvx0oJJ4DvPUk';\n  #page = 1;\n  #per_page = 25;\n  #query = '';\n  #total_photos = 0;\n\n  getPhotos() {\n    return fetch(\n      `https://api.unsplash.com/search/photos?client_id=${this.#API_KEY}&page=${\n        this.#page\n      }&query=${this.#query}&per_page=${this.#per_page}`\n    ).then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    });\n  }\n\n  get query() {\n    return this.#query;\n  }\n\n  set query(newQuery) {\n    this.#query = newQuery;\n  }\n\n  setTotal(total) {\n    this.#total_photos = total;\n  }\n\n  morePagesExists() {\n    return this.#page < Math.ceil(this.#total_photos / this.#per_page);\n  }\n  incrementPage() {\n    this.#page += 1;\n  }\n  resetPage() {\n    this.#page = 1;\n  }\n}\n","export function createMarkup(photos) {\n  return photos\n    .map(\n      ({ urls, alt_description }) => /*html*/ `<li class=\"gallery__item\">\n    <img src=\"${urls.small}\" alt=\"${alt_description}\" class=\"gallery-img\">\n</li>`\n    )\n    .join('');\n}\n","export const refs = {\n  galleryEL: document.querySelector('.gallery'),\n  formEl: document.querySelector('.js-search-form'),\n};\n"],"names":["$eWCmQ","parcelRequire","$jkMrE","$27cff1d5ee8ccf42$var$_API_KEY","WeakMap","$27cff1d5ee8ccf42$var$_page","$27cff1d5ee8ccf42$var$_per_page","$27cff1d5ee8ccf42$var$_query","$27cff1d5ee8ccf42$var$_total_photos","$4f099495539b4ed6$export$24783e9f3a24abe4","photos","map","urls","alt_description","small","join","$9ab29a7cfade7ffd$export$21666b427502ea6d","galleryEL","document","querySelector","formEl","$1468e2a6ea4339b8$var$unsplashApi","getPhotos","fetch","$parcel$interopDefault","this","then","response","ok","Error","status","json","query","newQuery","setTotal","total","morePagesExists","Math","ceil","incrementPage","resetPage","$g6yUq","$1468e2a6ea4339b8$var$io","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","unobserve","target","data","results","length","Notify","failure","insertAdjacentHTML","item","observe","root","rootMargin","threshold","addEventListener","event","preventDefault","elements","searchValue","value","toLowerCase","trim","innerHTML","reset"],"version":3,"file":"photos.304d8de2.js.map"}